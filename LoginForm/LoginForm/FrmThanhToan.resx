<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btThem.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /wFTPRAKkcbTQgAAAABJRU5ErkJggg==
</value>
  </data>
</root>