<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btThem.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>